
// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/


/* For use in src/lib/core/theming/_palette.scss */
$primary: (
    50: var(--clr-primary-50),
    100: var(--clr-primary-100),
    200: var(--clr-primary-200),
    300: var(--clr-primary-300),
    400: var(--clr-primary-400),
    500: var(--clr-primary-500),
    600: var(--clr-primary-600),
    700: var(--clr-primary-700),
    800: var(--clr-primary-800),
    900: var(--clr-primary-900),
    contrast: (
        50: var(--black),
        100: var(--black),
        200: var(--black),
        300: var(--black),
        400: var(--white),
        500: var(--white),
        600: var(--white),
        700: var(--white),
        800: var(--white),
        900: var(--white)
    )
);

$accent: (
  50: var(--clr-secondary-50),
  100: var(--clr-secondary-100),
  200: var(--clr-secondary-200),
  300: var(--clr-secondary-300),
  400: var(--clr-secondary-400),
  500: var(--clr-secondary-500),
  600: var(--clr-secondary-600),
  700: var(--clr-secondary-700),
  800: var(--clr-secondary-800),
  900: var(--clr-secondary-900),
    contrast: (
        50: var(--black),
        100: var(--black),
        200: var(--black),
        300: var(--black),
        400: var(--white),
        500: var(--white),
        600: var(--white),
        700: var(--white),
        800: var(--white),
        900: var(--white)
    )
);

$warn: (
    50: #feeae4,
    100: #fccbbc,
    200: #faa88f,
    300: #f78562,
    400: #f66b40,
    500: #f4511e,
    600: #f34a1a,
    700: #f14016,
    800: #ef3712,
    900: #ec270a,
    contrast: (
        50: var(--black),
        100: var(--black),
        200: var(--black),
        300: var(--black),
        400: var(--white),
        500: var(--white),
        600: var(--white),
        700: var(--white),
        800: var(--white),
        900: var(--white)
    ),
);




$facturas-primary: mat.define-palette($primary);
$facturas-accent: mat.define-palette($accent);

// The warn palette is optional (defaults to red).
$facturas-warn: mat.define-palette($warn);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$facturas-theme: mat.define-light-theme((
  color: (
    primary: $facturas-primary,
    accent: $facturas-accent,
    warn: $facturas-warn,
  )
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($facturas-theme);

